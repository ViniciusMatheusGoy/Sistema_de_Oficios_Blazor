// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GerenciamentoOficios.Migrations
{
    [DbContext(typeof(DbContextBanco))]
    partial class DbContextBancoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GerenciamentoOficios.Models.Oficio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DestinatarioID")
                        .HasColumnType("integer");

                    b.Property<int>("RemetenteID")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.HasKey("ID");

                    b.HasIndex("DestinatarioID");

                    b.HasIndex("RemetenteID");

                    b.ToTable("Oficios");
                });

            modelBuilder.Entity("GerenciamentoOficios.Models.Setor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("GerenciamentoOficios.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SetorID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("SetorID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GerenciamentoOficios.Models.Oficio", b =>
                {
                    b.HasOne("GerenciamentoOficios.Models.Usuario", "Destinatario")
                        .WithMany()
                        .HasForeignKey("DestinatarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoOficios.Models.Usuario", "Remetente")
                        .WithMany()
                        .HasForeignKey("RemetenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinatario");

                    b.Navigation("Remetente");
                });

            modelBuilder.Entity("GerenciamentoOficios.Models.Usuario", b =>
                {
                    b.HasOne("GerenciamentoOficios.Models.Setor", "Setor")
                        .WithMany("Usuarios")
                        .HasForeignKey("SetorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("GerenciamentoOficios.Models.Setor", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
